#!/bin/bash

user=$USER


MAIN_PATH="/home/$user/AMD"
if [ -d "$MAIN_PATH" ];then
	true
else
	mkdir /home/$user/AMD
fi





ubuntu=`cat /etc/os-release | grep -o "ubuntu" | head -1`
fedora=`cat /etc/os-release | grep -o "fedora" | head -1`
suse=`cat /etc/os-release | grep -o "suse" | head -1`



Ubuntu(){


	# Android Debug Bridge
	
	sudo apt update && sudo apt upgrade -y
	sudo apt install adb -y

	echo  "(1/4) .............. MariaDB installed [ OK ]"
	# MariaDB
	
	sudo apt update
	sudo apt install mariadb-server -y
	sudo systemctl start mariadb.service
	sudo mysql_secure_installation

	echo """Press Enter for indicate none for current database root password 
	and next Step type "N" and press Enter to not set password to root user."""

	echo "in Other Steps press Enter to Done"

	echo "Enter Database user :"
	read database_user
	echo "Enter Database Password :"
	read database_password : 
	sudo mariadb --execute="GRANT ALL ON *.* TO '$database_user'@'localhost' IDENTIFIED BY '$database_password' WITH GRANT OPTION;FLUSH PRIVILEGES;exit;"
	echo  "(2/4) .............. MariaDB installed [ OK ]"
	
	echo "add this codes to /etc/my.cnf File to Login MariaDB Automatically"
	echo """
	[clinet]
	user=mysql_user
	password=mysql_password
	"""

	sleep 2
# python_Tools
	
	sudo apt install python3-pip -y

	sudo pip3 install virtualenv

	echo  "(3/4) .............. python Tools installed [ OK ]"
	
	
	cd /home/$user/AMD
	wget https://github.com/KooshaYeganeh/AMD/archive/refs/heads/main.zip
	unzip main.zip
	mv AMD-main Source 
	cd Source
	vurtualenv venv
	# Create Directory for configurations
	mv config.py.sample config.py
	sudo mkdir /etc/AMD
	sudo touch /etc/AMD/AMD.conf
	cd /etc/AMD
	ln -s AMD.conf /home/$user/AMD/config.py
	# Create virtualenv in Main Directory
	## A virtual environment in Python allows you to create an isolated environment for your projects.
	## It means that your projects can have their own dependencies – independent of every other project's dependencies.
	source venv/bin/activate
	pip3 install -r requirements.txt

	check_mariadb=`sudo systemctl status mariadb | grep -w "Active: active"`
	if [ "$check_mariadb" == "Active: active" ];then
		mysql -u root -p --execute="CREATE DATABASE Android_Malware;"
		mysql -u root -p Android_Malware < ./Android_Malware.sql
		echo  "(4/4) .............. AMD installed [ OK ]"
	else
		sudo systemctl start mariadb
		mysql -u root -p --execute="CREATE DATABASE Android_Malware;"
		mysql -u root -p Android_Malware < ./Android_Malware.sql
		echo  "(4/4) .............. AMD installed [ OK ]"
	fi

}




Fedora(){

	# Android Debug Bridge
	
	sudo dnf update
	sudo dnf install adb -y

	echo  "(1/4) .............. MariaDB installed [ OK ]"
	# MariaDB
	
	sudo dnf module enable mariadb:10.4
	sudo dnf module install mariadb/server
	sudo dnf module install mariadb:10.4/client

	sudo systemctl start mariadb.service
	default_pass=`sudo grep 'temporary password' /var/log/mysqld.log`

	echo "MariaDB Default Password : $default_pass "

	sudo mysql_secure_installation

	echo "Some questions will be asked: answer to them as you prefer; answering yes to all of them is perfectly fine."

	echo """Press Enter for indicate none for current database root password 
	and next Step type "N" and press Enter to not set password to root user."""

	echo "in Other Steps press Enter to Done"

	echo "Enter Database user :"
	read database_user
	echo "Enter Database Password :"
	read database_password : 
	sudo mariadb --execute="GRANT ALL ON *.* TO '$database_user'@'localhost' IDENTIFIED BY '$database_password' WITH GRANT OPTION;FLUSH PRIVILEGES;exit;"
	echo  "(2/4) .............. MariaDB installed [ OK ]"
	
	echo "add this codes to /etc/my.cnf File to Login MariaDB Automatically"

	echo """
	[clinet]
	user=mysql_user
	password=mysql_password
	"""

	sleep 2
	

	# python_Tools
	
	sudo dnf install python-pip -y

	sudo pip install virtualenv

	echo  "(3/4) .............. python Tools installed [ OK ]"
	
	
	cd /home/$user/AMD
	wget https://github.com/KooshaYeganeh/AMD/archive/refs/heads/main.zip
	unzip main.zip
	mv AMD-main Source 
	cd Source
	vurtualenv venv
	# Create Directory for configurations
	mv config.py.sample config.py
	sudo mkdir /etc/AMD
	sudo touch /etc/AMD/AMD.conf
	cd /etc/AMD
	ln -s AMD.conf /home/$user/AMD/config.py
	# Create virtualenv in Main Directory
	## A virtual environment in Python allows you to create an isolated environment for your projects.
	## It means that your projects can have their own dependencies – independent of every other project's dependencies.
	source venv/bin/activate
	pip3 install -r requirements.txt

	check_mariadb=`sudo systemctl status mariadb | grep -w "Active: active"`
	if [ "$check_mariadb" == "Active: active" ];then
		mysql -u root -p --execute="CREATE DATABASE Android_Malware;"
		mysql -u root -p Android_Malware < ./Android_Malware.sql
		echo  "(4/4) .............. AMD installed [ OK ]"
	else
		sudo systemctl start mariadb
		mysql -u root -p --execute="CREATE DATABASE Android_Malware;"
		mysql -u root -p Android_Malware < ./Android_Malware.sql
		echo  "(4/4) .............. AMD installed [ OK ]"
	fi



}


OpenSuse(){


	echo """
       >>> These settings are written for OpenSuse Leap.
          If you use other versions, it is better to review the installation steps or do it manually. <<<
       """

	# Android Debug Bridge
	
	sudo zypper addrepo https://download.opensuse.org/repositories/hardware/openSUSE_Leap_15.3/hardware.repo
	sudo zypper refresh
	sudo zypper install android-tools

	echo  "(1/4) .............. MariaDB installed [ OK ]"
	# MariaDB
	
	sudo rpm --import https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
	sudo zypper --gpg-auto-import-keys refresh
	sudo zypper addrepo --gpgcheck --refresh https://yum.mariadb.org/10.7/opensuse/15/x86_64 mariadb
	sudo zypper refresh
	sudo zypper -n install MariaDB-server MariaDB-client


	echo """Press Enter for indicate none for current database root password 
	and next Step type "N" and press Enter to not set password to root user."""

	echo "in Other Steps press Enter to Done"

	echo "Enter Database user :"
	read database_user
	echo "Enter Database Password :"
	read database_password : 
	sudo mariadb --execute="GRANT ALL ON *.* TO '$database_user'@'localhost' IDENTIFIED BY '$database_password' WITH GRANT OPTION;FLUSH PRIVILEGES;exit;"
	echo  "(2/4) .............. MariaDB installed [ OK ]"
	
	echo "add this codes to /etc/my.cnf File to Login MariaDB Automatically"
	echo """
	[clinet]
	user=mysql_user
	password=mysql_password
	"""

	sleep 2
# python_Tools
	
	sudo apt install python3-pip -y

	sudo pip3 install virtualenv

	echo  "(3/4) .............. python Tools installed [ OK ]"
	
	
	cd /home/$user/AMD
	wget https://github.com/KooshaYeganeh/AMD/archive/refs/heads/main.zip
	unzip main.zip
	mv AMD-main Source 
	cd Source
	vurtualenv venv
	# Create Directory for configurations
	mv config.py.sample config.py
	sudo mkdir /etc/AMD
	sudo touch /etc/AMD/AMD.conf
	cd /etc/AMD
	ln -s AMD.conf /home/$user/AMD/config.py
	# Create virtualenv in Main Directory
	## A virtual environment in Python allows you to create an isolated environment for your projects.
	## It means that your projects can have their own dependencies – independent of every other project's dependencies.
	source venv/bin/activate
	pip3 install -r requirements.txt

	check_mariadb=`sudo systemctl status mariadb | grep -w "Active: active"`
	if [ "$check_mariadb" == "Active: active" ];then
		mysql -u root -p --execute="CREATE DATABASE Android_Malware;"
		mysql -u root -p Android_Malware < ./Android_Malware.sql
		echo  "(4/4) .............. AMD installed [ OK ]"
	else
		sudo systemctl start mariadb
		mysql -u root -p --execute="CREATE DATABASE Android_Malware;"
		mysql -u root -p Android_Malware < ./Android_Malware.sql
		echo  "(4/4) .............. AMD installed [ OK ]"
	fi


}






if [ "$ubuntu" == "ubuntu" ];then
	Ubuntu
elif [ "$fedora" == "fedora" ];then
	Fedora
elif [ "$suse" == "suse" ];then
	OpenSuse
else
	echo "Can Not Detect OS or Your Distrubutions Not Supported Now"
fi




